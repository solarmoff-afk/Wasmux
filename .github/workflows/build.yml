name: Build Wasmtime for Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - abi: arm64-v8a
            target: aarch64-linux-android
            linker_prefix: aarch64-linux-android
          - abi: armeabi-v7a
            target: armv7-linux-androideabi
            linker_prefix: armv7a-linux-androideabi
    steps:
    - name: Checkout Wasmtime
      uses: actions/checkout@v4
      with:
        repository: bytecodealliance/wasmtime
        submodules: recursive
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    - name: Set up Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r26d
    - name: Set CC environment
      run: |
        target_underscore=$(echo "${{ matrix.target }}" | tr - _)
        echo "CC_${target_underscore}=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ matrix.linker_prefix }}21-clang" >> $GITHUB_ENV
        echo "AR_${target_underscore}=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar" >> $GITHUB_ENV
    - name: Configure Cargo for Android
      run: |
        mkdir -p ~/.cargo
        cat << EOF >> ~/.cargo/config.toml
        [target.${{ matrix.target }}]
        linker = "${{ env.CC_${target_underscore // - / _ } }}"
        ar = "${{ env.AR_${target_underscore // - / _ } }}"
        EOF
    - name: Ensure cdylib in Cargo.toml
      run: |
        if ! grep -q 'cdylib' crates/c-api/Cargo.toml; then
          sed -i '/\[lib\]/a crate-type = ["cdylib", "staticlib"]' crates/c-api/Cargo.toml
        fi
    - name: Build with cargo
      run: cargo build --target ${{ matrix.target }} --release -p wasmtime-c-api
    - name: Move artifacts
      run: |
        mkdir -p artifacts/${{ matrix.abi }}
        cp target/${{ matrix.target }}/release/libwasmtime.so artifacts/${{ matrix.abi }}/libwasmtime.so || true
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wasmtime-android-libs-${{ matrix.abi }}
        path: artifacts/${{ matrix.abi }}/libwasmtime.so

  combine-artifacts:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Organize and archive
      run: |
        mkdir -p wasmtime-libs
        mv artifacts/wasmtime-android-libs-arm64-v8a/libwasmtime.so wasmtime-libs/arm64-v8a-libwasmtime.so || true
        mv artifacts/wasmtime-android-libs-armeabi-v7a/libwasmtime.so wasmtime-libs/armeabi-v7a-libwasmtime.so || true
        tar -czvf wasmtime-libs.tar.gz -C wasmtime-libs .
    - name: Upload combined artifact
      uses: actions/upload-artifact@v4
      with:
        name: wasmtime-android-libs
        path: wasmtime-libs.tar.gz