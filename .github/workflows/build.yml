name: Build Wasmtime for Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - abi: arm64-v8a
            target: aarch64-linux-android
            linker_prefix: aarch64-linux-android
          - abi: armeabi-v7a
            target: armv7-linux-androideabi
            linker_prefix: armv7a-linux-androideabi
    steps:
    - name: Checkout Wasmtime
      uses: actions/checkout@v4
      with:
        repository: bytecodealliance/wasmtime
        submodules: recursive
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    - name: Set up Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r26d
    - name: Configure Cargo for Android
      run: |
        linker="$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ matrix.linker_prefix }}21-clang"
        ar="$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
        echo "CC_${{ matrix.target }}=$linker" >> $GITHUB_ENV
        echo "AR_${{ matrix.target }}=$ar" >> $GITHUB_ENV
        mkdir -p ~/.cargo
        cat << EOF >> ~/.cargo/config.toml
        [target.${{ matrix.target }}]
        linker = "$linker"
        ar = "$ar"
        EOF
    - name: Configure crate-type for cdylib
      run: |
        sed -i 's/crate-type = \["staticlib"\]/crate-type = \["cdylib", "staticlib"\]/' crates/c-api/artifact/Cargo.toml
    - name: Build with cargo
      run: |
        bindgen_args="--target=${{ matrix.linker_prefix }}21 --sysroot=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot"
        export BINDGEN_EXTRA_CLANG_ARGS="$bindgen_args"
        cargo build --target ${{ matrix.target }} --release -p wasmtime-c-api
    - name: Move artifacts
      run: |
        mkdir -p artifacts/${{ matrix.abi }}
        cp target/${{ matrix.target }}/release/libwasmtime.so artifacts/${{ matrix.abi }}/libwasmtime.so || true
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wasmtime-android-libs-${{ matrix.abi }}
        path: artifacts/${{ matrix.abi }}/libwasmtime.so

  combine-artifacts:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Checkout Wasmtime for headers
      uses: actions/checkout@v4
      with:
        repository: bytecodealliance/wasmtime
        path: wasmtime_source
    - name: Organize and archive
      run: |
        mkdir -p sdk/include
        mkdir -p sdk/libs/arm64-v8a
        mkdir -p sdk/libs/armeabi-v7a
        cp -r wasmtime_source/crates/c-api/include/* sdk/include/
        mv artifacts/wasmtime-android-libs-arm64-v8a/libwasmtime.so sdk/libs/arm64-v8a/libwasmtime.so || true
        mv artifacts/wasmtime-android-libs-armeabi-v7a/libwasmtime.so sdk/libs/armeabi-v7a/libwasmtime.so || true
        tar -czvf wasmtime-android-sdk.tar.gz -C sdk .
    - name: Upload combined artifact
      uses: actions/upload-artifact@v4
      with:
        name: wasmtime-android-sdk
        path: wasmtime-android-sdk.tar.gz